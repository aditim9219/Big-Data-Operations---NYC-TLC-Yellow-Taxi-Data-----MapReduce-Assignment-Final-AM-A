#############################################
#Code for - Which vendors have the most trips, and what is the total revenue generated by that vendor?
#############################################

#Importing all libraries required for map reduce job
from mrjob.job import MRJob
from mrjob.step import MRStep

#defining class
class MostTripsTotalRevenue(MRJob):

    #Defining steps for mapper-reducer
    def steps(self):
        return [
            MRStep(mapper=self.mapper, reducer=self.reducer),
            MRStep(reducer=self.final_reducer)
        ]
    
     #mapper for mapping key value pair
    def mapper(self, _, line):
        if not line.startswith('VendorID'):
            row = line.split(',')
            vendor_id = row[0]
            revenue = float(row[16])
            yield vendor_id, revenue
    
    #reducer provides count of vendors
    def reducer(self, key, values):
        yield None, (sum(values), key)
    
    #function to find which vendor count is more.
    def final_reducer(self, _, values):
        max_revenue, vendor_id = max(values)
        yield vendor_id, max_revenue

#main function
if __name__ == '__main__':
    MostTripsTotalRevenue.run()